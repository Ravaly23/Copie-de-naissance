/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projet;
import java.awt.print.PrinterException;
import java.io.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author valy
 */
public class consulation extends javax.swing.JFrame {

    /**
     * Creates new form consulation
     */
    public consulation() {
        initComponents();
        }


    public static void main(String args[]){
    
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setTitle("FIJERENA");
        setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Blue"));

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "REFERENCE", "NOM ENFANT", "NOM PARENT", "DISTRICT", "LIEU DE NAISSANCE" }));

        jButton1.setBackground(new java.awt.Color(0, 102, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Valider");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(242, 113, 4));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Effacer");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Quittez");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextArea1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jTextArea1);

        jTextField2.setOpaque(true);

        jLabel1.setText("Nom du fichier a Imprimer");

        jButton4.setBackground(new java.awt.Color(0, 8, 228));
        jButton4.setText("Impression");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jTextField2)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      
        try {
            String nom=(String)jTextField1.getText();
            Connection cn=DriverManager.getConnection("jdbc:mysql://localhost/mlr1","root","");
            Statement st=cn.createStatement();
            String nom_enfant;
            String nom_parent;
            String district;
            String lieu_naissance;
            String reference;

            if(jComboBox1.getSelectedItem().equals("NOM ENFANT")){
                Window_tableau tab=new Window_tableau();
                String [] entete={"REFERENCE DU COPIE","NOM","PRENOM","SEXE","DATE DE NAISSANCE"};
                Object [][] donnee=new Object[0][0];
                DefaultTableModel monmodele=new DefaultTableModel(donnee,entete);
                nom_enfant="select enfant.NOM,enfant.PRENOM,enfant.DATE_NAISSANCE,enfant.HEURE_NAISSANCE"
                + ",enfant.SITUATION_NAISSANCE,enfant.DISTRICT,enfant.SEXE,enfant.LIEU_NAISSANCE "
                + ",NOM_PERE,PRENOM_PERE,DATE_NAISSANCE_PERE,LIEU_NAISSANCE_PERE,PROFESSION_PERE"
                + ",NOM_MERE,PRENOM_MERE,DATE_NAISSANCE_MERE,LIEU_NAISSANCE_MERE,PROFESSION_MERE"
                + ",RESIDENCE ,REF,DATE_CREATION,HEURE_CREATION,SITUATION_CREATION,LIEU_CREATION,RESPONSABLE "
                + "from parent,enfant,kopia where enfant.NOM='"+nom+"' and"
                + " enfant.ID_ENFANT=kopia.ID_ENFANT and enfant.ID_PARENT"
                + "=parent.ID_PARENT";
                ResultSet res=st.executeQuery(nom_enfant);
                while(res.next()){
                 monmodele.addRow(new Object[]{res.getString("REF"),res.getString("NOM"),res.getString("PRENOM")
                   ,res.getString("SEXE"),res.getString("DATE_NAISSANCE")} );
                    JTable tableau=new JTable(monmodele);
                    JScrollPane jsp=new JScrollPane(tableau);
                    tab.add(jsp);
                    
                }
            }
                else if(jComboBox1.getSelectedItem().equals("NOM PARENT")){
                Window_tableau tab=new Window_tableau();
                String [] entete={"REFERENCE DU COPIE","NOM","PRENOM","SEXE","DATE DE NAISSANCE"};
                Object [][] donnee=new Object[0][0];
                DefaultTableModel monmodele=new DefaultTableModel(donnee,entete);
                nom_parent="select enfant.NOM,enfant.PRENOM,enfant.DATE_NAISSANCE,enfant.HEURE_NAISSANCE"
                + ",enfant.SITUATION_NAISSANCE,enfant.DISTRICT,enfant.SEXE,enfant.LIEU_NAISSANCE "
                + ",NOM_PERE,PRENOM_PERE,DATE_NAISSANCE_PERE,LIEU_NAISSANCE_PERE,PROFESSION_PERE"
                + ",NOM_MERE,PRENOM_MERE,DATE_NAISSANCE_MERE,LIEU_NAISSANCE_MERE,PROFESSION_MERE"
                + ",RESIDENCE ,REF,DATE_CREATION,HEURE_CREATION,SITUATION_CREATION,LIEU_CREATION,RESPONSABLE "
                + "from parent,enfant,kopia where parent.NOM_PERE='"+nom+"' and"
                + " enfant.ID_ENFANT=kopia.ID_ENFANT and enfant.ID_PARENT"
                + "=parent.ID_PARENT";
                ResultSet res=st.executeQuery(nom_parent);
                while(res.next()){
                 monmodele.addRow(new Object[]{res.getString("REF"),res.getString("NOM"),res.getString("PRENOM")
                   ,res.getString("SEXE"),res.getString("DATE_NAISSANCE")} );
                    JTable tableau=new JTable(monmodele);
                    JScrollPane jsp=new JScrollPane(tableau);
                    tab.add(jsp);
                }
            }
            
             else if(jComboBox1.getSelectedItem().equals("DISTRICT")){
                Window_tableau tab=new Window_tableau();
                String [] entete={"REFERENCE DU COPIE","NOM","PRENOM","SEXE","DATE DE NAISSANCE"};
                Object [][] donnee=new Object[0][0];
                DefaultTableModel monmodele=new DefaultTableModel(donnee,entete);
                district="select enfant.NOM,enfant.PRENOM,enfant.DATE_NAISSANCE,enfant.HEURE_NAISSANCE"
                + ",enfant.SITUATION_NAISSANCE,enfant.DISTRICT,enfant.SEXE,enfant.LIEU_NAISSANCE "
                + ",NOM_PERE,PRENOM_PERE,DATE_NAISSANCE_PERE,LIEU_NAISSANCE_PERE,PROFESSION_PERE"
                + ",NOM_MERE,PRENOM_MERE,DATE_NAISSANCE_MERE,LIEU_NAISSANCE_MERE,PROFESSION_MERE"
                + ",RESIDENCE ,REF,DATE_CREATION,HEURE_CREATION,SITUATION_CREATION,LIEU_CREATION,RESPONSABLE "
                + "from parent,enfant,kopia where DISTRICT='"+nom+"' and"
                + " enfant.ID_ENFANT=kopia.ID_ENFANT and enfant.ID_PARENT"
                + "=parent.ID_PARENT";
                ResultSet res=st.executeQuery(district);
                while(res.next()){
                 monmodele.addRow(new Object[]{res.getString("REF"),res.getString("NOM"),res.getString("PRENOM")
                   ,res.getString("SEXE"),res.getString("DATE_NAISSANCE")} );
                    JTable tableau=new JTable(monmodele);
                    JScrollPane jsp=new JScrollPane(tableau);
                    tab.add(jsp);
                }
            }
            
            
            else if(jComboBox1.getSelectedItem().equals("LIEU DE NAISSANCE")){
                Window_tableau tab=new Window_tableau();
                String [] entete={"REFERENCE DU COPIE","NOM","PRENOM","SEXE","DATE DE NAISSANCE"};
                Object [][] donnee=new Object[0][0];
                DefaultTableModel monmodele=new DefaultTableModel(donnee,entete);
                lieu_naissance="select enfant.NOM,enfant.PRENOM,enfant.DATE_NAISSANCE,enfant.HEURE_NAISSANCE"
                + ",enfant.SITUATION_NAISSANCE,enfant.DISTRICT,enfant.SEXE,enfant.LIEU_NAISSANCE "
                + ",NOM_PERE,PRENOM_PERE,DATE_NAISSANCE_PERE,LIEU_NAISSANCE_PERE,PROFESSION_PERE"
                + ",NOM_MERE,PRENOM_MERE,DATE_NAISSANCE_MERE,LIEU_NAISSANCE_MERE,PROFESSION_MERE"
                + ",RESIDENCE ,REF,DATE_CREATION,HEURE_CREATION,SITUATION_CREATION,LIEU_CREATION,RESPONSABLE "
                + "from parent,enfant,kopia where enfant.LIEU_NAISSANCE='"+nom+"' and"
                + " enfant.ID_ENFANT=kopia.ID_ENFANT and enfant.ID_PARENT"
                + "=parent.ID_PARENT";
                ResultSet res=st.executeQuery(lieu_naissance);
                while(res.next()){
                 monmodele.addRow(new Object[]{res.getString("REF"),res.getString("NOM"),res.getString("PRENOM")
                   ,res.getString("SEXE"),res.getString("DATE_NAISSANCE")} );
                    JTable tableau=new JTable(monmodele);
                    JScrollPane jsp=new JScrollPane(tableau);
                    tab.add(jsp);
                }
            }
            
             else if(jComboBox1.getSelectedItem().equals("REFERENCE")){
                int ref=Integer.parseInt(jTextField1.getText());
                reference="select enfant.NOM,enfant.PRENOM,enfant.DATE_NAISSANCE,enfant.HEURE_NAISSANCE"
                + ",enfant.SITUATION_NAISSANCE,enfant.DISTRICT,enfant.SEXE,enfant.LIEU_NAISSANCE "
                + ",NOM_PERE,PRENOM_PERE,DATE_NAISSANCE_PERE,LIEU_NAISSANCE_PERE,PROFESSION_PERE"
                + ",NOM_MERE,PRENOM_MERE,DATE_NAISSANCE_MERE,LIEU_NAISSANCE_MERE,PROFESSION_MERE"
                + ",REF,RESIDENCE ,DATE_CREATION,HEURE_CREATION,SITUATION_CREATION,LIEU_CREATION,RESPONSABLE "
                + "from parent,enfant,kopia where REF="+ref+" and"
                + " enfant.ID_ENFANT=kopia.ID_ENFANT and enfant.ID_PARENT"
                + "=parent.ID_PARENT";
                ResultSet res=st.executeQuery(reference);
                while(res.next()){
                    String dateNP = res.getString("DATE_NAISSANCE_PERE"); // date de naissance pere
                    String dateNPString[] = dateNP.split(" ");
                    int jrP = Integer.parseInt(dateNPString[0]);
                    String msp = dateNPString[1];
                    int ansP = Integer.parseInt(dateNPString[2]);
                    
                    ChiffreLettre jrp1 = new ChiffreLettre(jrP);
                    ChiffreLettre ansp1 = new ChiffreLettre(ansP);
                      
                    String datePString = jrp1.Transformation()+" "+msp+" "+ansp1.Transformation();
                    
                    String dateNM = res.getString("DATE_NAISSANCE_MERE"); // date de naissance mere
                    String dateNMString[] = dateNM.split(" ");
                    int jrM = Integer.parseInt(dateNMString[0]);
                    String msm = dateNMString[1];
                    int ansM = Integer.parseInt(dateNMString[2]);
                    
                    ChiffreLettre jrm1 = new ChiffreLettre(jrM);
                    ChiffreLettre ansm1 = new ChiffreLettre(ansM);
                      
                    String dateMString = jrm1.Transformation()+" "+msm+" "+ansm1.Transformation();
                    
                    String dateE = res.getString("DATE_NAISSANCE"); // date de naissance enfant
                    String dateEString[] = dateE.split(" ");
                    int jrE = Integer.parseInt(dateEString[0]);
                    String msE = dateEString[1];
                    int ansE = Integer.parseInt(dateEString[2]);
                    
                    ChiffreLettre jrE1 = new ChiffreLettre(jrE);
                    ChiffreLettre ansE1 = new ChiffreLettre(ansE);
                      
                    String dateEString1 = jrE1.Transformation()+""+msE;
                    
                    String anneesEnfant = ansE1.Transformation();
                    
                    String heureE = res.getString("HEURE_NAISSANCE"); // heure de naissance enfant
                    String heureEString[] = heureE.split(" ");
                    
                    int hrsE = Integer.parseInt(heureEString[0]); 
                    int mnE = Integer.parseInt(heureEString[2]);
                    
                    String heureEString1 = condition(hrsE, mnE); // appelle à la fonction qui change heure en lettre
                    
                    String dateCr = res.getString("DATE_NAISSANCE"); // date de creation kopia
                    String dateCrString[] = dateCr.split(" ");
                    int jrCr = Integer.parseInt(dateCrString[0]);
                    String msCr = dateCrString[1];
                    int ansCr = Integer.parseInt(dateCrString[2]);
                    
                    ChiffreLettre jrCr1 = new ChiffreLettre(jrCr);
                    ChiffreLettre ansCr1 = new ChiffreLettre(ansCr);
                      
                    String dateCrString1 = jrCr1.Transformation()+" "+msCr+" "+ansCr1.Transformation();
                    
                                        
                    String heureCr = res.getString("HEURE_CREATION"); // heure de creation
                    String heureCrString[] = heureCr.split(" ");
                    int hrsCr = Integer.parseInt(heureCrString[0]);
                    
                    int mnCr = Integer.parseInt(heureCrString[2]);
                    
                    String heureCrString1 = condition(hrsCr,mnCr); // appelle à la fonction qui change heure en lettre
                    
               jTextArea1.append("\t\t\t     REPOBLIKAN'I MADAGASIKARA\t\t\t\t\n"
             +"\t\t\tFitiavana-Tanindrazana-Fandrosoana\t\t\t\t\n"
             +"\t\t\t                    -----------------\t\t\t\t\n"
             +"COMMUNE URBAINE  \n              DE"+"\n     "+res.getString("DISTRICT")
             +"\t\t\t COPIE D'ACTE DE L'ETAT-CIVIL\t\t\t\t\n"
             +"\t\t\t                  -------oo0oo-------\t\t\t\t\n\n"
             +"      ETAT-CIVIL"        
             +"\t\t ----Tamin'ny "+dateEString1+", taona "+anneesEnfant+",\n \t\t tamin'ny "+" "+heureEString1+" "
             + ""+res.getString("SITUATION_NAISSANCE")+",  no teraka teto "+res.getString("DISTRICT")+","+"\n"
             + "\t\t tao amin'ny "+res.getString("LIEU_NAISSANCE")+" : "+res.getString("NOM")+" "+res.getString("PRENOM")
             +", "+res.getString("SEXE")+", zanak'i\n"
             +"   Laharana:"+res.getInt("REF")
             +"\t\t "+res.getString("NOM_PERE")+" "+res.getString("PRENOM_PERE")+res.getString("PROFESSION_PERE")
             +" teraka teto "+res.getString("LIEU_NAISSANCE_PERE")+",\n \t\t tamin'ny "
             +" "+datePString+" ,\n \t\t sy "+res.getString("NOM_MERE")+" "+res.getString("PRENOM_MERE")
             +","+res.getString("PROFESSION_MERE")+","+" teraka teto "+res.getString("LIEU_NAISSANCE_PERE")+","+"\n"
             +res.getString("DATE_NAISSANCE")
             +"\t\t tamin'ny  "+dateMString+",\n \t\t monina ao "+res.getString("RESIDENCE")+".\n\n"
             +res.getString("NOM")+"\n"+res.getString("PRENOM")+"\n"
             +"\t\t Nosoratana androany "+dateCrString1+",\n \t\t tamin'ny "+heureCrString1+" "
             +res.getString("SITUATION_CREATION")+"\n"
             +"\t\t Araky ny fanambarana nataon'i "+res.getString("NOM_PERE")+" rain-jaza, \n"
             +"\t\t izay miara manao sonia aminay ,"+res.getString("RESPONSABLE")+","
             +" \n \t\t Mpiandraikitra ny Sora-piankonana \n\n\n\n"
             
             +"\t\t                                      (SONIA MANARAKA) \n\n\n"
             +"\t\t===================================================================\t\t\n\n"
             +"\t\t Kopia manontolo nadika tamin'ny boky ary nomena androany\n"
             +"\t\t "+dateCrString1+"\n\n\n"
             +"\t\t               NY MPIANDRAIKITRA NY SORA-PIANKOHOANANA");

                   

                /*String kopiaImprimer ="C:\\"+imp.nom()+"";
                try(PrintWriter out = new PrintWriter(new FileWriter(kopiaImprimer))){
                out.println(jTextArea1.getText());
                }catch (IOException ex) {
                        Logger.getLogger(consulation.class.getName()).log(Level.SEVERE, null, ex);
                    }*/
    
                                     
                }
            }
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

                    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
        jTextField1.setText("");
        jComboBox1.setSelectedItem("REFERENCE");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField1InputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField1InputMethodTextChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            /* String kopiaImprimer ="C:\\"+jTextField2.getText()+"";
            try(PrintWriter out = new PrintWriter(new FileWriter(kopiaImprimer))){
            out.println(jTextArea1.getText());
            }catch (IOException ex) {
            Logger.getLogger(consulation.class.getName()).log(Level.SEVERE, null, ex);
            }*/
            boolean print = jTextArea1.print();
        } catch (PrinterException ex) {
            Logger.getLogger(consulation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static String condition(int hr,int mn){ //fontion qui change l'heure et date 
        
        ChiffreLettre mnCr1 = new ChiffreLettre(mn);
        ChiffreLettre hrsCr1 = new ChiffreLettre(hr); 
        
        String heure = hrsCr1.Transformation();
        String minute = mnCr1.Transformation();
        
        String ora = heure+" ora ";
        String oraSyMinitra = heure+" ora "+" sy "+minute+" minitra ";
        
        if(mn==0)
        return ora;
        else
        return oraSyMinitra;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
